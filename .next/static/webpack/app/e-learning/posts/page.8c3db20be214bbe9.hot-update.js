"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/e-learning/posts/page",{

/***/ "(app-pages-browser)/./src/hooks/use-podcast.js":
/*!**********************************!*\
  !*** ./src/hooks/use-podcast.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ usePodcast; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _json_data_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json-data-api */ \"(app-pages-browser)/./src/hooks/json-data-api.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\nasync function fetchPodcastData(url) {\n    try {\n        const response = await fetch(url);\n        const xmlText = await response.text();\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(xmlText, \"application/xml\");\n        const channel = xml.querySelector(\"channel\");\n        const podcastData = {\n            title: channel.querySelector(\"title\").textContent,\n            description: channel.querySelector(\"description\").textContent,\n            image: channel.querySelector(\"image url\").textContent,\n            link: channel.querySelector(\"link\").textContent\n        };\n        return podcastData;\n    } catch (error) {\n        console.error(\"Error fetching podcast data:\", error);\n        return null;\n    }\n}\nasync function fetchPodcastEpisodes(url) {\n    try {\n        const response = await fetch(url);\n        const xmlText = await response.text();\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(xmlText, \"application/xml\");\n        const items = xml.querySelectorAll(\"item\");\n        const episodes = Array.from(items).map((item)=>{\n            console.log(item);\n            const titleElement = item.querySelector(\"title\");\n            const title = titleElement ? titleElement.textContent : \"Unknown Title\";\n            const episodeMatch = title.match(/Episode #(\\d+):/);\n            const episodeNumber = episodeMatch ? parseInt(episodeMatch[1]) : null;\n            const descriptionElement = item.querySelector(\"description\");\n            const description = descriptionElement ? descriptionElement.textContent : \"No Description\";\n            const linkElement = item.querySelector(\"link\");\n            const link = linkElement ? linkElement.textContent : \"#\";\n            const pubDateElement = item.querySelector(\"pubDate\");\n            const pubDate = pubDateElement ? pubDateElement.textContent : \"Unknown Date\";\n            const enclosureElement = item.querySelector(\"enclosure\");\n            const enclosure = enclosureElement ? {\n                url: enclosureElement.getAttribute(\"url\"),\n                type: enclosureElement.getAttribute(\"type\")\n            } : null;\n            let coverArt = null;\n            const itunesImage = item.getElementsByTagNameNS(\"http://www.itunes.com/dtds/podcast-1.0.dtd\", \"image\")[0];\n            if (itunesImage) {\n                coverArt = itunesImage.getAttribute(\"href\");\n            }\n            let duration = null;\n            const itunesDuration = item.getElementsByTagNameNS(\"http://www.itunes.com/dtds/podcast-1.0.dtd\", \"duration\")[0];\n            if (itunesDuration) {\n                duration = itunesDuration.text;\n            }\n            return {\n                title: title,\n                description: description,\n                link: link,\n                pubDate: pubDate,\n                enclosure: enclosure,\n                episodeNumber: episodeNumber,\n                duration: duration,\n                coverArt: coverArt\n            };\n        });\n        console.log(episodes);\n        return episodes;\n    } catch (error) {\n        console.error(\"Error fetching podcast episodes:\", error);\n        return [];\n    }\n}\nfunction usePodcast(url) {\n    _s();\n    const [podcastData, setPodcastData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [podcastEpisodes, setPodcastEpisodes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [podcastServers, setPodcastServers] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const fetchData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        const podcast = await fetchPodcastData(url);\n        const episodes = await fetchPodcastEpisodes(url);\n        const json = await _json_data_api__WEBPACK_IMPORTED_MODULE_1__[\"default\"].podcastServers();\n        console.log(episodes);\n        setPodcastData(podcast);\n        setPodcastEpisodes(episodes);\n        setPodcastServers(json);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        fetchData();\n    }, []);\n    return [\n        podcastData,\n        podcastEpisodes,\n        podcastServers\n    ];\n}\n_s(usePodcast, \"rca0M10HvwHOs7DxOzneIWLKJqM=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-podcast.js\n"));

/***/ })

});